import tkinter as tk
from tkinter import ttk, font
from gui.login import LoginWindow

class MainApplication(tk.Tk):
    def __init__(self, user, firm):
        super().__init__()
        self.title(f"OK2 Muhasebe - {firm.name}")
        self.geometry("1200x800")
        self.user = user
        self.firm = firm
        
        # Üst bilgi
        header_frame = ttk.Frame(self)
        header_frame.pack(fill=tk.X, padx=10, pady=10)
        
        ttk.Label(header_frame, text=f"{firm.name} | {user.username} ({user.role})", 
                 font=font.Font(size=12, weight="bold")).pack(side=tk.LEFT)
        
        # Modül seçim menüsü
        self.module_frame = ttk.LabelFrame(self, text="Modüller")
        self.module_frame.pack(side=tk.LEFT, fill=tk.Y, padx=10, pady=10)
        
        modules = [
            ("🏢 Cari Hesaplar", self.show_cari),
            ("🧾 Fatura/İrsaliye", self.show_invoices),
            ("📦 Stok Yönetimi", self.show_inventory),
            ("💳 Çek/Senet", self.show_checks),
            ("💰 Kasa/Banka", self.show_cash),
            ("📊 Raporlar", self.show_reports)
        ]
        
        for text, command in modules:
            btn = ttk.Button(self.module_frame, text=text, command=command, width=20)
            btn.pack(fill=tk.X, pady=5)
        
        # Ana içerik alanı
        self.content_frame = ttk.Frame(self)
        self.content_frame.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True, padx=(0,10), pady=10)
        
        # Varsayılan olarak Cari modülünü göster
        self.show_cari()

    def show_cari(self):
        for widget in self.content_frame.winfo_children():
        widget.destroy()
    
    try:
        try:
            from gui.modules.cari import CariModule
        cari_frame = CariModule(self.content_frame, self.firm)
        cari_frame.pack(fill=tk.BOTH, expand=True)
    except Exception as e:
        error_msg = f"Cari modülü yüklenemedi: {str(e)}"
        ttk.Label(self.content_frame, text=error_msg, foreground="red").pack(pady=20)
        with open("app_error.log", "a") as f:
            f.write(error_msg + "\n")
        # Hatanın tam detayını yazdır
        import traceback
        traceback.print_exc()
    
    def show_invoices(self):
        self.clear_content_frame()
        ttk.Label(self.content_frame, text="Fatura/İrsaliye Modülü Yakında Eklenecek", 
                 font=font.Font(size=14)).pack(pady=50)
    
    def show_inventory(self):
        self.clear_content_frame()
        ttk.Label(self.content_frame, text="Stok Yönetimi Modülü Yakında Eklenecek", 
                 font=font.Font(size=14)).pack(pady=50)
    
    def show_checks(self):
        self.clear_content_frame()
        ttk.Label(self.content_frame, text="Çek/Senet Modülü Yakında Eklenecek", 
                 font=font.Font(size=14)).pack(pady=50)
    
    def show_cash(self):
        self.clear_content_frame()
        ttk.Label(self.content_frame, text="Kasa/Banka Modülü Yakında Eklenecek", 
                 font=font.Font(size=14)).pack(pady=50)
    
    def show_reports(self):
        self.clear_content_frame()
        ttk.Label(self.content_frame, text="Raporlar Modülü Yakında Eklenecek", 
                 font=font.Font(size=14)).pack(pady=50)
    
    def clear_content_frame(self):
        for widget in self.content_frame.winfo_children():
            widget.destroy()

# Uygulama başlatma
if __name__ == "__main__":
    root = tk.Tk()
    root.withdraw()  # Ana pencereyi başlangıçta gizle
    
    # Giriş ekranını göster
    login = LoginWindow(root)
    root.wait_window(login)
    
    # Giriş başarılıysa ana uygulamayı başlat
    if hasattr(login, 'current_user') and login.current_user:
        app = MainApplication(login.current_user, login.firm)
        app.mainloop()
